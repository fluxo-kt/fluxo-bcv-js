name: Build

on:
  pull_request:
    paths-ignore:
      - '**-check.yml'
      - '**-submission.yml'
      - '**-validation.yml'
      - '**.*ignore'
      - '**.md'
      - '**.txt'
      - '**benchmark.yml'
      - '**dependabot.yml'
  push:
    paths-ignore:
      - '**-check.yml'
      - '**-submission.yml'
      - '**-validation.yml'
      - '**.*ignore'
      - '**.md'
      - '**.txt'
      - '**benchmark.yml'
      - '**dependabot.yml'

env:
  CI: true
  BUILD_NUMBER: ${{ github.run_number }}
  SCM_TAG: ${{ github.sha }}
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

jobs:
  checks:
    name: 'Build and check'
    timeout-minutes: 25
    runs-on: 'ubuntu-latest'
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4a1e83c9ef6b0e39b16f17b2734e08cdfbeea46c
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Set up JDK 17'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
          cache-read-only: ${{ (github.ref != 'refs/heads/main' && github.ref != 'refs/heads/dev') }}

      - name: 'Build and check plugin itself'
        run: ./gradlew build assemble check --continue --stacktrace --scan

      - name: 'Check "latest" setup example'
        working-directory: checks/latest
        run: ./gradlew check --continue --stacktrace --scan

      - name: 'Check "js-only" setup example'
        working-directory: checks/js-only
        run: ./gradlew check --continue --stacktrace --scan

      - name: "Add build scan URL as PR comment"
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request' && failure()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå ${{ github.workflow }} failed: ${{ steps.gradle.outputs.build-scan-url }}'
            })
